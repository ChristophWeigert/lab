---
# yamllint disable rule:line-length

networks:
  proxy:
    external: true
  internal:

volumes:
  grafana:
  prometheus:

services:
  grafana:
    image: grafana/grafana-oss:11.6.1@sha256:52c3e20686b860c6dc1f623811565773cf51eefa378817a4896dfc863c3c82c8
    container_name: grafana-prod-1
    command: ['./run.sh', '-disable-reporting']
    environment:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "$CLIENTID"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "$CLIENTSESCRET"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "$GF_AUTH_GENERIC_OAUTH_AUTH_URL"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "$GF_AUTH_GENERIC_OAUTH_TOKEN_URL"
      GF_AUTH_GENERIC_OAUTH_API_URL: "$GF_AUTH_GENERIC_OAUTH_API_URL"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "$GF_AUTH_SIGNOUT_REDIRECT_URL"
      GF_SERVER_ROOT_URL: "https://grafana.$DOMAIN/"
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'"
    volumes:
      - grafana:/var/lib/grafana
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.rule: "Host(`grafana.$DOMAIN`) || Host(`grafana.$EXTERNAL_DOMAIN`)"
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.tls.certresolver: "production"
      traefik.docker.network: "proxy"
    networks:
      - proxy
      - internal
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.3.1@sha256:e2b8aa62b64855956e3ec1e18b4f9387fb6203174a4471936f4662f437f04405
    container_name: prometheus-prod-1
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - /opt/configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus:/prometheus
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus.entrypoints: "websecure"
      traefik.http.routers.prometheus.rule: "Host(`prometheus.$DOMAIN`)"
      traefik.http.routers.prometheus.tls: "true"
      traefik.http.routers.prometheus.tls.certresolver: "production"
      traefik.docker.network: "proxy"
    networks:
      - proxy
      - internal
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1@sha256:f40e65878e25c2e78ea037f73a449527a0fb994e303dc3e34cb6b187b4b91435
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - internal
