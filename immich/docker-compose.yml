---
# yamllint disable rule:line-length

networks:
  proxy:
    external: true
  immich:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.122.1@sha256:1c887847b62490ce36fc5bf26b838282eed057d06168f6077f71f9a28ed63850
    volumes:
      - immich_appdata:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    networks:
      - immich
      - proxy
    depends_on:
      - redis
      - database
    env_file:
      - stack.env
    ports:
      - 2283:2283
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.immich.entrypoints: "websecure"
      traefik.http.routers.immich.rule: "Host(`$DOMAIN`) || Host(`$EXTERNAL_DOMAIN`)"
      traefik.http.routers.immich.tls: "true"
      traefik.http.routers.immich.tls.certresolver: "production"
      traefik.docker.network: "proxy"
      homepage.name: immich
      homepage.group: Services
      homepage.icon: immich
      homepage.href: https://$DOMAIN
      homepage.description: immich
      homepage.widget.type: immich
      homepage.widget.url: https://$DOMAIN
      homepage.widget.key: $HOMEPAGE_KEY

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.122.2@sha256:5c4e7a25a01e4dd52e9b919a277a2d870af0a08094e4089c85708e402512a8aa
    volumes:
      - model-cache:/cache
    networks:
      - immich
    restart: always
    env_file:
      - stack.env

  redis:
    container_name: immich_redis
    image: redis:7.4-alpine@sha256:c1e88455c85225310bbea54816e9c3f4b5295815e6dbf80c34d40afc6df28275
    networks:
      - immich
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    env_file:
      - stack.env

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    networks:
      - immich
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata:
  model-cache:
  immich_appdata:
    external: true
